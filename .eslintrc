{
	"root": true,
	"ignorePatterns": ["dist", "node_modules", "coverage", "src/constants/version.ts"],

	"extends": [
		"strictest/eslint",
		"strictest/promise",
		"strictest/typescript-eslint",
		"strictest/unicorn",
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:prettier/recommended"
	],
	"plugins": [
		"deprecation",
		"import",
		"prettier",
		"promise",
		"@typescript-eslint",
		"unicorn",
		"file-progress"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.prod.json",
		"tsconfigRootDir": "./"
	},
	"env": {
		"node": true
	},
	"rules": {
		"file-progress/activate": 1,
		"deprecation/deprecation": "warn",
		"prettier/prettier": "warn",
		"no-constant-condition": "warn",
		"no-dupe-else-if": "warn",
		"consistent-return": "off", // TS handles this
		"no-duplicate-imports": "off", // typescript-eslint handles this
		"@typescript-eslint/no-duplicate-imports": "error",
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/require-await": "warn",
		"@typescript-eslint/no-inferrable-types": "off",
		"@typescript-eslint/no-invalid-void-type": ["error", { "allowAsThisParameter": true }],
		"@typescript-eslint/explicit-member-accessibility": [
			"error",
			{ "accessibility": "no-public", "overrides": { "properties": "off" } }
		],
		"@typescript-eslint/explicit-function-return-type": [
			"error",
			{ "allowConciseArrowFunctionExpressionsStartingWithVoid": true }
		],
		"@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
		"@typescript-eslint/array-type": ["warn", { "default": "generic" }],
		"@typescript-eslint/dot-notation": "off",
		"unicorn/catch-error-name": ["warn", { "name": "error" }],
		"unicorn/import-index": ["error", { "ignoreImports": true }],
		"unicorn/no-process-exit": "off", // we are a command-line app that might need to exit early
		"arrow-spacing": ["warn", { "before": true, "after": true }],
		"brace-style": ["error"],
		"comma-dangle": ["error", "always-multiline"],
		"comma-spacing": "error",
		"comma-style": "error",
		"curly": ["error", "multi-line", "consistent"],
		"dot-location": ["error", "property"],
		"handle-callback-err": "off",
		"keyword-spacing": "error",
		"max-nested-callbacks": ["error", { "max": 4 }],
		"max-statements-per-line": ["error", { "max": 2 }],
		"no-console": "warn",
		"no-empty-function": "error",
		"no-floating-decimal": "error",
		"no-inline-comments": "off", // in case we wanna add a lil clarification to a complicated line, or just throw in something silly
		"no-lonely-if": "error",
		"no-multi-spaces": "error",
		"no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1, "maxBOF": 0 }],
		"@typescript-eslint/no-shadow": ["error", { "allow": ["err", "resolve", "reject", "client"] }], // See https://stackoverflow.com/a/63961972
		"no-trailing-spaces": ["error"],
		"no-var": "error",
		"object-curly-spacing": ["error", "always"],
		"prefer-const": "error",
		"quotes": ["error", "single", { "avoidEscape": true }],
		"semi": ["error", "always"],
		"space-before-blocks": "error",
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "never",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"space-in-parens": "error",
		"space-infix-ops": "error",
		"space-unary-ops": "error",
		"spaced-comment": ["warn", "always", { "exceptions": ["*"] }], // doc comments exist
		"yoda": "error",
		"import/no-default-export": "error"
	},

	"overrides": [
		{
			"files": ["src/**/*.test.ts", "src/**/__mocks__/**/*.ts"],
			"parserOptions": {
				"project": "./tsconfig.test.json"
			},
			"rules": {
				"prettier/prettier": "warn",
				"max-nested-callbacks": "off" // unit tests involve a lot of nested callbacks
			}
		},
		{
			"files": ["scripts/**/*.ts"],
			"parserOptions": {
				"project": "./tsconfig.test.json",
				"tsconfigRootDir": "."
			},
			"rules": {
				"unicorn/no-process-exit": "off"
			}
		}
	]
}
